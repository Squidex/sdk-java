/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.squidex.api.resources.contents.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.squidex.api.core.ObjectMappers;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ContentsPostGraphQlBatchRequest.Builder.class)
public final class ContentsPostGraphQlBatchRequest {
    private final Optional<Boolean> unpublished;

    private final Object body;

    private ContentsPostGraphQlBatchRequest(Optional<Boolean> unpublished, Object body) {
        this.unpublished = unpublished;
        this.body = body;
    }

    /**
     * @return Return unpublished content items.
     */
    @JsonProperty("X-Unpublished")
    public Optional<Boolean> getUnpublished() {
        return unpublished;
    }

    @JsonProperty("body")
    public Object getBody() {
        return body;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ContentsPostGraphQlBatchRequest && equalTo((ContentsPostGraphQlBatchRequest) other);
    }

    private boolean equalTo(ContentsPostGraphQlBatchRequest other) {
        return unpublished.equals(other.unpublished) && body.equals(other.body);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.unpublished, this.body);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BodyStage builder() {
        return new Builder();
    }

    public interface BodyStage {
        _FinalStage body(Object body);

        Builder from(ContentsPostGraphQlBatchRequest other);
    }

    public interface _FinalStage {
        ContentsPostGraphQlBatchRequest build();

        _FinalStage unpublished(Optional<Boolean> unpublished);

        _FinalStage unpublished(Boolean unpublished);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BodyStage, _FinalStage {
        private Object body;

        private Optional<Boolean> unpublished = Optional.empty();

        private Builder() {}

        @Override
        public Builder from(ContentsPostGraphQlBatchRequest other) {
            unpublished(other.getUnpublished());
            body(other.getBody());
            return this;
        }

        @Override
        @JsonSetter("body")
        public _FinalStage body(Object body) {
            this.body = body;
            return this;
        }

        /**
         * <p>Return unpublished content items.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @Override
        public _FinalStage unpublished(Boolean unpublished) {
            this.unpublished = Optional.of(unpublished);
            return this;
        }

        @Override
        @JsonSetter(value = "X-Unpublished", nulls = Nulls.SKIP)
        public _FinalStage unpublished(Optional<Boolean> unpublished) {
            this.unpublished = unpublished;
            return this;
        }

        @Override
        public ContentsPostGraphQlBatchRequest build() {
            return new ContentsPostGraphQlBatchRequest(unpublished, body);
        }
    }
}
