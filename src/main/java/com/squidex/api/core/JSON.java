/*
 * Squidex API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.squidex.api.core;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.PostProcessor;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerPostProcessor(com.squidex.api.types.ArrayFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.ArrayFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ArrayFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ArrayFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Array"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.AssetsFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.AssetsFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.AssetsFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.AssetsFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Assets"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.BooleanFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.BooleanFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.BooleanFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.BooleanFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Boolean"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ComponentFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.ComponentFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ComponentFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ComponentFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Component"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ComponentsFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.ComponentsFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ComponentsFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ComponentsFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Components"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.DateTimeFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.DateTimeFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.DateTimeFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.DateTimeFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("DateTime"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.GeolocationFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.GeolocationFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.GeolocationFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.GeolocationFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Geolocation"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.JsonFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.JsonFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.JsonFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.JsonFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Json"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.NumberFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.NumberFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.NumberFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.NumberFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Number"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ReferencesFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.ReferencesFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ReferencesFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ReferencesFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("References"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.RichTextFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.RichTextFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.RichTextFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.RichTextFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("RichText"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.StringFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.StringFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.StringFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.StringFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("String"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.TagsFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.TagsFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.TagsFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.TagsFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("Tags"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.UIFieldPropertiesDto.class, new PostProcessor<com.squidex.api.types.UIFieldPropertiesDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.UIFieldPropertiesDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.UIFieldPropertiesDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("fieldType", new JsonPrimitive("UI"));
                        }
                    }
                })
                .registerTypeSelector(com.squidex.api.types.FieldPropertiesDto.class, new TypeSelector<com.squidex.api.types.FieldPropertiesDto>() {
                    @Override
                    public Class<? extends com.squidex.api.types.FieldPropertiesDto> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Array", com.squidex.api.types.ArrayFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Assets", com.squidex.api.types.AssetsFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Boolean", com.squidex.api.types.BooleanFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Component", com.squidex.api.types.ComponentFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Components", com.squidex.api.types.ComponentsFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("DateTime", com.squidex.api.types.DateTimeFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Geolocation", com.squidex.api.types.GeolocationFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Json", com.squidex.api.types.JsonFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Number", com.squidex.api.types.NumberFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("References", com.squidex.api.types.ReferencesFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("RichText", com.squidex.api.types.RichTextFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("String", com.squidex.api.types.StringFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("Tags", com.squidex.api.types.TagsFieldPropertiesDto.class);
                        classByDiscriminatorValue.put("UI", com.squidex.api.types.UIFieldPropertiesDto.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "fieldType"));
                    }
                })
                .registerPostProcessor(com.squidex.api.types.AlgoliaRuleActionDto.class, new PostProcessor<com.squidex.api.types.AlgoliaRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.AlgoliaRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.AlgoliaRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Algolia"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.AzureQueueRuleActionDto.class, new PostProcessor<com.squidex.api.types.AzureQueueRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.AzureQueueRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.AzureQueueRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("AzureQueue"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.CommentRuleActionDto.class, new PostProcessor<com.squidex.api.types.CommentRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.CommentRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.CommentRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Comment"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.CreateContentRuleActionDto.class, new PostProcessor<com.squidex.api.types.CreateContentRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.CreateContentRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.CreateContentRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("CreateContent"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.DiscourseRuleActionDto.class, new PostProcessor<com.squidex.api.types.DiscourseRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.DiscourseRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.DiscourseRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Discourse"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ElasticSearchRuleActionDto.class, new PostProcessor<com.squidex.api.types.ElasticSearchRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ElasticSearchRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ElasticSearchRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("ElasticSearch"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.EmailRuleActionDto.class, new PostProcessor<com.squidex.api.types.EmailRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.EmailRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.EmailRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Email"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.FastlyRuleActionDto.class, new PostProcessor<com.squidex.api.types.FastlyRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.FastlyRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.FastlyRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Fastly"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.MediumRuleActionDto.class, new PostProcessor<com.squidex.api.types.MediumRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.MediumRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.MediumRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Medium"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.NotificationRuleActionDto.class, new PostProcessor<com.squidex.api.types.NotificationRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.NotificationRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.NotificationRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Notification"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.OpenSearchRuleActionDto.class, new PostProcessor<com.squidex.api.types.OpenSearchRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.OpenSearchRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.OpenSearchRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("OpenSearch"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.PrerenderRuleActionDto.class, new PostProcessor<com.squidex.api.types.PrerenderRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.PrerenderRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.PrerenderRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Prerender"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ScriptRuleActionDto.class, new PostProcessor<com.squidex.api.types.ScriptRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ScriptRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ScriptRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Script"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.SignalRRuleActionDto.class, new PostProcessor<com.squidex.api.types.SignalRRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.SignalRRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.SignalRRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("SignalR"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.SlackRuleActionDto.class, new PostProcessor<com.squidex.api.types.SlackRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.SlackRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.SlackRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Slack"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.TweetRuleActionDto.class, new PostProcessor<com.squidex.api.types.TweetRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.TweetRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.TweetRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Tweet"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.TypesenseRuleActionDto.class, new PostProcessor<com.squidex.api.types.TypesenseRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.TypesenseRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.TypesenseRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Typesense"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.WebhookRuleActionDto.class, new PostProcessor<com.squidex.api.types.WebhookRuleActionDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.WebhookRuleActionDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.WebhookRuleActionDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("actionType", new JsonPrimitive("Webhook"));
                        }
                    }
                })
                .registerTypeSelector(com.squidex.api.types.RuleActionDto.class, new TypeSelector<com.squidex.api.types.RuleActionDto>() {
                    @Override
                    public Class<? extends com.squidex.api.types.RuleActionDto> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Algolia", com.squidex.api.types.AlgoliaRuleActionDto.class);
                        classByDiscriminatorValue.put("AzureQueue", com.squidex.api.types.AzureQueueRuleActionDto.class);
                        classByDiscriminatorValue.put("Comment", com.squidex.api.types.CommentRuleActionDto.class);
                        classByDiscriminatorValue.put("CreateContent", com.squidex.api.types.CreateContentRuleActionDto.class);
                        classByDiscriminatorValue.put("Discourse", com.squidex.api.types.DiscourseRuleActionDto.class);
                        classByDiscriminatorValue.put("ElasticSearch", com.squidex.api.types.ElasticSearchRuleActionDto.class);
                        classByDiscriminatorValue.put("Email", com.squidex.api.types.EmailRuleActionDto.class);
                        classByDiscriminatorValue.put("Fastly", com.squidex.api.types.FastlyRuleActionDto.class);
                        classByDiscriminatorValue.put("Medium", com.squidex.api.types.MediumRuleActionDto.class);
                        classByDiscriminatorValue.put("Notification", com.squidex.api.types.NotificationRuleActionDto.class);
                        classByDiscriminatorValue.put("OpenSearch", com.squidex.api.types.OpenSearchRuleActionDto.class);
                        classByDiscriminatorValue.put("Prerender", com.squidex.api.types.PrerenderRuleActionDto.class);
                        classByDiscriminatorValue.put("Script", com.squidex.api.types.ScriptRuleActionDto.class);
                        classByDiscriminatorValue.put("SignalR", com.squidex.api.types.SignalRRuleActionDto.class);
                        classByDiscriminatorValue.put("Slack", com.squidex.api.types.SlackRuleActionDto.class);
                        classByDiscriminatorValue.put("Tweet", com.squidex.api.types.TweetRuleActionDto.class);
                        classByDiscriminatorValue.put("Typesense", com.squidex.api.types.TypesenseRuleActionDto.class);
                        classByDiscriminatorValue.put("Webhook", com.squidex.api.types.WebhookRuleActionDto.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "actionType"));
                    }
                })
                .registerPostProcessor(com.squidex.api.types.AssetChangedRuleTriggerDto.class, new PostProcessor<com.squidex.api.types.AssetChangedRuleTriggerDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.AssetChangedRuleTriggerDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.AssetChangedRuleTriggerDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("triggerType", new JsonPrimitive("AssetChanged"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.CommentRuleTriggerDto.class, new PostProcessor<com.squidex.api.types.CommentRuleTriggerDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.CommentRuleTriggerDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.CommentRuleTriggerDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("triggerType", new JsonPrimitive("Comment"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ContentChangedRuleTriggerDto.class, new PostProcessor<com.squidex.api.types.ContentChangedRuleTriggerDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ContentChangedRuleTriggerDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ContentChangedRuleTriggerDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("triggerType", new JsonPrimitive("ContentChanged"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.ManualRuleTriggerDto.class, new PostProcessor<com.squidex.api.types.ManualRuleTriggerDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.ManualRuleTriggerDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.ManualRuleTriggerDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("triggerType", new JsonPrimitive("Manual"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.SchemaChangedRuleTriggerDto.class, new PostProcessor<com.squidex.api.types.SchemaChangedRuleTriggerDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.SchemaChangedRuleTriggerDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.SchemaChangedRuleTriggerDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("triggerType", new JsonPrimitive("SchemaChanged"));
                        }
                    }
                })
                .registerPostProcessor(com.squidex.api.types.UsageRuleTriggerDto.class, new PostProcessor<com.squidex.api.types.UsageRuleTriggerDto>() {
                    @Override
                    public void postDeserialize(com.squidex.api.types.UsageRuleTriggerDto result, JsonElement src, Gson gson) {
                    }

                    @Override
                    public void postSerialize(JsonElement result, com.squidex.api.types.UsageRuleTriggerDto src, Gson gson) {
                        if (result instanceof JsonObject) {
                            ((JsonObject)result).add("triggerType", new JsonPrimitive("Usage"));
                        }
                    }
                })
                .registerTypeSelector(com.squidex.api.types.RuleTriggerDto.class, new TypeSelector<com.squidex.api.types.RuleTriggerDto>() {
                    @Override
                    public Class<? extends com.squidex.api.types.RuleTriggerDto> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AssetChanged", com.squidex.api.types.AssetChangedRuleTriggerDto.class);
                        classByDiscriminatorValue.put("Comment", com.squidex.api.types.CommentRuleTriggerDto.class);
                        classByDiscriminatorValue.put("ContentChanged", com.squidex.api.types.ContentChangedRuleTriggerDto.class);
                        classByDiscriminatorValue.put("Manual", com.squidex.api.types.ManualRuleTriggerDto.class);
                        classByDiscriminatorValue.put("SchemaChanged", com.squidex.api.types.SchemaChangedRuleTriggerDto.class);
                        classByDiscriminatorValue.put("Usage", com.squidex.api.types.UsageRuleTriggerDto.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "triggerType"));
                    }
                })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AddFieldDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AddLanguageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AddRoleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AddWorkflowDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AlgoliaRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AllContentsByPostDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AnnotateAssetDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AppDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AppLanguageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AppLanguagesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AppSettingsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ArrayFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetChangedRuleTriggerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetFolderDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetFoldersDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetMeta.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetScriptsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssetsFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AssignContributorDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AuthSchemeDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AuthSchemeResponseDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AuthSchemeValueDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.AzureQueueRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BackupJobDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BackupJobsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BooleanFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BulkResultDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BulkUpdateAssetsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BulkUpdateAssetsJobDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BulkUpdateContentsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.BulkUpdateContentsJobDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CallsUsageDtoDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CallsUsagePerDateDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ChangeCategoryDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ChangePlanDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ChangeStatusDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ClientDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ClientsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CommentRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CommentRuleTriggerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ComponentFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ComponentsFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ConfigureFieldRulesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ConfigureUIFieldsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ContentChangedRuleTriggerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ContentDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ContentsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ContributorDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ContributorsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ContributorsMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateAppDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateAssetFolderDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateClientDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateContentRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateRuleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateSchemaDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateTeamDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CreateUserDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.CurrentStorageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.DateTimeFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.DiscourseRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.EditorDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ElasticSearchRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.EmailRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ErrorDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.EventConsumerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.EventConsumersDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.FastlyRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.FeatureDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.FeaturesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.FieldDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.FieldRuleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.GeolocationFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.HistoryEventDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ImportContentsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.JobDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.JobLogMessageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.JobsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.JsonFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.LanguageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.LogDownloadDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ManualRuleTriggerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.MediumRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.MoveAssetDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.MoveAssetFolderDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.NestedFieldDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.NotificationRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.NumberFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.OpenSearchRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.PatternDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.PlanChangedDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.PlanDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.PlansDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.PrerenderRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.QueryDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.QueryJsonDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ReferencesFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ReferralInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RenameAssetFolderDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RenameTagDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ReorderFieldsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.Resource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ResourceLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ResourcesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RestoreJobDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RestoreRequestDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RichTextFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RoleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RolesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RuleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RuleElementDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RuleElementPropertyDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RuleEventDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RuleEventsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.RulesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ScheduleJobDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SchemaChangedRuleTriggerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SchemaCondition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SchemaDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SchemaPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SchemaScriptsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SchemasDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.ScriptRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SearchResultDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SignalRRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SimulatedRuleEventDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SimulatedRuleEventsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SlackRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SortNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.StatusInfoDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.StorageUsagePerDateDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.StringFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.SynchronizeSchemaDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TagsFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TeamDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TemplateDetailsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TemplateDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TemplatesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TransferToTeamDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TranslateDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TranslationDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TweetRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.TypesenseRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UIFieldPropertiesDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateAppDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateAppSettingsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateAssetScriptsDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateClientDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateFieldDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateLanguageDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateProfileDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateRoleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateRuleDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateSchemaDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateSettingDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateTeamDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateUserDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpdateWorkflowDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpsertSchemaDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpsertSchemaFieldDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UpsertSchemaNestedFieldDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UsageRuleTriggerDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UserDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UserProperty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.UsersDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.WebhookRuleActionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.WorkflowDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.WorkflowStepDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.WorkflowTransitionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.squidex.api.types.WorkflowsDto.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}